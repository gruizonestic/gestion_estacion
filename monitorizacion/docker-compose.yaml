version: '3'

services:
  # Plataforma de recolección de métricas HTTP de los servicios monitoreados
  prometheus:
    image: prom/prometheus
    volumes:
      # Volumen de configuración
      - ./prometheus/:/etc/prometheus/
      # Volumen de datos
      - prometheus-data:/prometheus
    restart: "always"
    networks:
      - backend
    expose:
      - 9090
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
  # Analiza los recursos usados por los contendores
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/snap/docker/common/var-lib-docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    expose:
      - 8080
    networks:
      - backend
    restart: "always"
    labels:
      org.label-schema.group: "monitoring"
  # Visor de métricas y datos
  grafana:
    image: grafana/grafana:9.2.4
    depends_on: 
      - prometheus
    expose: 
      - 3000
    volumes:
      # Volumen de datos
      - grafana_data:/var/lib/grafana
      # Volumen de configuración
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    networks:
      - backend
    restart: "always"

networks:
  frontend:
  backend:

volumes:
  prometheus-data: {}
  grafana_data: {}


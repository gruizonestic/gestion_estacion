version: "3"

services:
  api1:
    image: gruizonestic/gestion_estacion_api1
    ports:
      - "5001:5000"

  api2:
    image: gruizonestic/gestion_estacion_api2
    ports:
      - "5002:5000"

  api3:
    image: gruizonestic/gestion_estacion_api3
    ports:
      - "5003:5000"

  api4:
    image: gruizonestic/gestion_estacion_api4
    ports:
      - "5004:5000"

  horarios_backend:
    image: gruizonestic/gestion_estacion_horarios_backend
    ports:
      - 5101-5102:5000
    deploy:
      mode: replicated
      replicas: 2

  horarios_frontend:
    image: gruizonestic/gestion_estacion_horarios_frontend
    depends_on:
      - horarios_backend
    ports:
      - 5103-5104:5000
    deploy:
      mode: replicated
      replicas: 2

  balanceador:
    image: gruizonestic/gestion_estacion_balanceador
    depends_on:
      - horarios_frontend
    ports:
      - 5105:5000

  api_trenes:
    image: gruizonestic/gestion_estacion_api_trenes
    ports:
      - "5106-5107:5000"

  puerta_backend:
    image: gruizonestic/gestion_estacion_puerta_backend
    ports:
      - "5207:5000"
    hostname: puerta.backend
    deploy:
      mode: replicated
      replicas: 3

  puerta:
    image: gruizonestic/gestion_estacion_puerta
    ports:
      - "5201-5206:5000"
    depends_on:
      - puerta_backend
    deploy:
      mode: replicated
      replicas: 6

  transferencias_diarias:
    image: gruizonestic/gestion_estacion_transferencias_diarias

  frontend_tpv:
    image: gruizonestic/gestion_estacion_frontend_tpv

  backend_ventas:
    image: gruizonestic/gestion_estacion_backend_ventas
    deploy:
      mode: replicated
      replicas: 3

  tpv:
    depends_on:
      - backend_ventas
    image: gruizonestic/gestion_estacion_tpv

  ftp:
    image: gruizonestic/gestion_estacion_ftp
    ports:
      - "20:20"
      - "21:21"
      - "47400-47470:47400-47470"
    volumes:
      - ftp:/home/vsftpd

  db:
    image: mysql:8
    volumes:
      - db_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mypass

  python_backend:
    image: gruizonestic/gestion_estacion_python_backend
    volumes:
      - python_backend:/var/backend

  api_luces:
    depends_on:
      - python_backend
    image: gruizonestic/gestion_estacion_api_luces

  api_puertas:
    depends_on:
      - python_backend
    image: gruizonestic/gestion_estacion_api_puertas

  db_servicio:
    image: mysql:8
    volumes:
      - db_data_servicio:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mypass

  terminal_fichaje:
    image: gruizonestic/gestion_estacion_terminal

  terminal_manual:
    image: gruizonestic/gestion_estacion_terminal_manual
    deploy:
      mode: replicated
      replicas: 2

  portainer:
    image: portainer/portainer-ce:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer:/data
    ports:
      - 9000:9000

  prometheus:
    image: prom/prometheus:v2.40.1
    container_name: prometheus
    user: root
    volumes:
      - ./monitorizacion/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role==manager

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  grafana:
    image: grafana/grafana:9.2.4
    container_name: grafana
    user: root
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitorizacion/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitorizacion/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role==manager

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

volumes:
  db_data: {}
  python_backend: {}
  db_data_servicio: {}
  ftp: {}
  portainer: {}
  prometheus_data: {}
  grafana_data: {}